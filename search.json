[
  {
    "objectID": "card.html",
    "href": "card.html",
    "title": "Card –basic playing card",
    "section": "",
    "text": "我们来看一下，符号的样子\n\nsuits\n\n['♠', '♣', '♥', '♦']\n\n\n一个使用的例子\n\nc=Card(1,4)\nprint(c)\n\nNameError: name 'ranks' is not defined\n\n\n\nsource\n\nCard\n\n Card (suit:int, rank:int)\n\n扑克牌的定义\n\n\n\n\nType\nDetails\n\n\n\n\nsuit\nint\n表示扑克牌花色\n\n\nrank\nint\n扑克上的数字\n\n\n\n单元测试环节\n\ntest_eq(Card(1,3),Card(1,3))\ntest_ne(Card(1,3),Card(2,3))\ntest_ne(Card(1,3),Card(1,4))"
  },
  {
    "objectID": "deck.html",
    "href": "deck.html",
    "title": "Transformer101",
    "section": "",
    "text": "simple tutorial on Deck\n\n\nsource\n\n\n\n Deck ()\n\n扑克牌的的定义的定义\n\nsource\n\n\n\n\n Card (suit:int, rank:int)\n\n扑克牌的定义\n\n\n\n\nType\nDetails\n\n\n\n\nsuit\nint\n表示扑克牌花色\n\n\nrank\nint\n扑克上的数字\n\n\n\n我们来看一下，符号的样子\n\nd=Deck()\nprint(d)\na=2\n\n[None♠, A♠, 3♠, 4♠, 5♠, 6♠, 7♠, 8♠, 9♠, J♠, Q♠, K♠, None♣, A♣, 3♣, 4♣, 5♣, 6♣, 7♣, 8♣, 9♣, J♣, Q♣, K♣, None♥, A♥, 3♥, 4♥, 5♥, 6♥, 7♥, 8♥, 9♥, J♥, Q♥, K♥, None♦, A♦, 3♦, 4♦, 5♦, 6♦, 7♦, 8♦, 9♦, J♦, Q♦, K♦]\n\n\n\n\n\n\nsource\n\n\n\n\n Deck.pop (index:int=-1)\n\n取出最后一张牌\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nindex\nint\n-1\n取牌的位置\n\n\n\n\nd=Deck()\nprint(d.pop())\n\nK♦\n\n\n\n\n\n\n#查看下是否包含\nd=Deck()\nc=Card(1,2)\nc in d\n\nTrue\n\n\n\n\n    def heavy():\n        time.sleep(200)\n        return 8\n    a=heavy()\n放心，nbdev_preview不会执行代码，只会渲染页面，nvdev_test才会执行code"
  },
  {
    "objectID": "deck.html#contains",
    "href": "deck.html#contains",
    "title": "Transformer101",
    "section": "",
    "text": "#查看下是否包含\nd=Deck()\nc=Card(1,2)\nc in d\n\nTrue\n\n\n\n\n    def heavy():\n        time.sleep(200)\n        return 8\n    a=heavy()\n放心，nbdev_preview不会执行代码，只会渲染页面，nvdev_test才会执行code"
  },
  {
    "objectID": "02transform.html",
    "href": "02transform.html",
    "title": "Transformer102",
    "section": "",
    "text": "! pip install datasets evaluate transformers[sentencepiece]\nfrom transformers import AutoTokenizer\nfrom transformers import AutoModel\nfrom transformers import AutoModelForSequenceClassification\nfrom transformers import AutoModelForCausalLM\nfrom torch.utils.data import dataset, sampler, dataloader\nfrom datasets import load_dataset,DatasetDict,Dataset\nfrom transformers import BertConfig, BertModel,AutoConfig\nfrom transformers import DataCollatorWithPadding\nimport pandas as pd\nfrom transformers import Trainer,TrainingArguments,DataCollatorWithPadding\nimport numpy as np\n\nzsh:1: no matches found: transformers[sentencepiece]\n\n\n\n\nxx\n\n xx (x)\n\n\nx=BertConfig.from_pretrained\nxx(None)\n\n放心，nbdev_preview不会执行代码，只会渲染页面，nvdev_test才会执行code"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "主页",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "主页",
    "section": "Install",
    "text": "Install\npip install nvdeb101"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "主页",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2\n\n\n\nCard(3,2)\n\n3♦"
  }
]